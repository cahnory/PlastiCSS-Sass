/// Number functions
// + removeUnit()
// + changeUnit()
// + pow($value, $exp)
// + pi()

// Remove number unit
//
// @param number $value
// @return number
@function removeUnit($value) {
  @return $value / ($value * 0 + 1);
}

// Change number unit
//
// @param number $value
// @param string $unit  the new unit
// @return number
@function changeUnit($value, $unit) {
  @return removeUnit($value) + $unit;
}

// Return value raised to the power of exp
//
// @param number $value
// @param number $exp   integer exponent
// @return number
@function pow($value, $exp, $zz: 1) {
  $x: $value;
  // x^0
  @if $exp == 0 {
    @if $value != 0 {
      $x: $value / abs($value);
    }
    @else {
      $x: $zz;
    }
  }
  // 0^x
  @else if $value == 0 {
    @if $exp > 0 {
      $x: 0;
    }
    @else {
      $x: infinite;
    }
  }
  // x^y
  @else {
    $i: 1;
    $a: abs($exp);
    @while $i < $a {
      $x: $x * $value;
      $i: $i + 1;
    }
    @if $exp < 0 {
      $x: (1 / $x);
    }
  }
  @return $x;
}

// Returns an approximation of pi
//
// @return number
@function pi() {
  @return 3.14159265358979323846;
}