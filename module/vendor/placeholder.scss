// Mixins
// ======
//
// placeholder()
//
@mixin placeholder($base: '') {
  $prefixes: support-getPropertyPrefixes('::input-placeholder');
  @each $prefix in $prefixes {
    // Add prefix filter on current selector prefix
    $support-tmp: support-limit-prefix($prefix);

    $selector: $base + '::-#{$prefix}-input-placeholder';
    #{$selector} { @content }
  }

  $prefixes: support-getPropertyPrefixes(':placeholder');
  @each $prefix in $prefixes {
    // Add prefix filter on current selector prefix
    $support-tmp: support-limit-prefix($prefix);

    $selector: $base + ':-#{$prefix}-placeholder';
    #{$selector} { @content }
  }

  $prefixes: support-getPropertyPrefixes(':input-placeholder');
  @each $prefix in $prefixes {
    // Add prefix filter on current selector prefix
    $support-tmp: support-limit-prefix($prefix);

    $selector: $base + ':-#{$prefix}-input-placeholder';
    #{$selector} { @content }
  }

  // Remove prefix filter
  $support-tmp: support-limit-prefix(false);
}


// Support definition
// ==================
//
// Desktop
// -------
// Chrome               all
// Firefox              all
// Internet Explorer    all
// Safari               all
//
// Mobile
// -------
// Android              all
// Safari iOS           all
//
$support-tmp: support-property('::input-placeholder', android);
$support-tmp: support-property('::input-placeholder', chrome);
$support-tmp: support-property('::input-placeholder', firefox);
$support-tmp: support-property('::input-placeholder', safari);
$support-tmp: support-property('::input-placeholder', safari-ios);

$support-tmp: support-property(':placeholder',  firefox, 19);
$support-tmp: support-property(':input-placeholder',  ie);